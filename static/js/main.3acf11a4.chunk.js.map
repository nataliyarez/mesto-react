{"version":3,"sources":["images/header_logo.svg","components/Header.js","images/profile_pencil_big.svg","components/Card.js","utils/api.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","alt","src","headerLogo","Card","props","onClick","onCardClick","card","id","aria-label","type","title","likes","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","then","_getResponseData","name","about","body","JSON","stringify","link","cardId","avatar","isLike","authorization","Main","onEditProfile","onAddPlace","onEditAvatar","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getInitialCards","data","map","item","key","_id","length","catch","err","console","log","getInitialInfo","info","pencil","Footer","PopupWithForm","visible","isOpen","onClose","noValidate","children","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","required","minLength","maxLength","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAAe,MAA0B,wC,OCY1BA,MAVf,WACI,OACI,8BACI,wBAAQC,UAAU,SAAlB,SACA,qBAAKC,IAAI,2BAAOD,UAAU,eAAeE,IAAKC,SCN3C,MAA0B,+CC2B1BC,MA3Bf,SAAcC,GAKV,OAGI,qBAAIL,UAAU,UAAd,UACI,qBAAKM,QARO,WAChBD,EAAME,YAAYF,EAAMG,OAOQP,IAAKI,EAAMJ,IAAKD,UAAU,iBAAiBS,GAAG,aACrEP,IAAKG,EAAMG,KAAKN,MACrB,wBAAQQ,aAAW,6CAAUV,UAAU,wCAC/BW,KAAK,WACb,sBAAKX,UAAU,wBAAf,UACI,oBAAIA,UAAU,gBAAd,SAA+BK,EAAMG,KAAKI,QAC1C,sBAAKZ,UAAU,yBAAf,UACI,wBAAQU,aAAW,mDAAWV,UAAU,gBAAgBW,KAAK,WAC7D,mBAAGX,UAAU,iBAAb,SAA+BK,EAAMG,KAAKK,kB,cC6ExDC,EAAM,I,WA5FR,WAAYC,GAAU,oBACnBC,KAAKC,SAAWF,EAAQG,QACxBF,KAAKG,SAAWJ,EAAQK,Q,oDAE3B,SAAiBC,GACb,OAAIA,EAAIC,GACGD,EAAIE,OAIRC,QAAQC,OAAR,gDAA0BJ,EAAIK,W,6BAGzC,WACG,OAAQC,MAAMX,KAAKC,SAAS,SAAS,CAChCW,OAAQ,MACRR,QAASJ,KAAKG,WAEdU,KAAKb,KAAKc,oB,4BAIlB,WACI,OAAOH,MAAMX,KAAKC,SAAS,YAAY,CACnCW,OAAQ,MACRR,QAASJ,KAAKG,WAEbU,KAAKb,KAAKc,oB,sBAGnB,SAAUC,EAAMC,GACb,OAAQL,MAAMX,KAAKC,SAAS,YAAa,CACpCW,OAAQ,QACRR,QAASJ,KAAKG,SACdc,KAAMC,KAAKC,UAAU,CACjBJ,KAAMA,EACNC,MAAOA,MAGXH,KAAKb,KAAKc,oB,qBAElB,SAASC,EAAMK,GACX,OAAQT,MAAMX,KAAKC,SAAS,SAAU,CAClCW,OAAQ,OACRR,QAASJ,KAAKG,SACdc,KAAMC,KAAKC,UAAU,CACjBJ,KAAMA,EACNK,KAAMA,MAGTP,KAAKb,KAAKc,oB,wBAEnB,SAAYO,GACR,OAAQV,MAAMX,KAAKC,SAAS,UAAUoB,EAAQ,CAC1CT,OAAQ,SACRR,QAASJ,KAAKG,WAEbU,KAAKb,KAAKc,oB,wBAGnB,SAAYQ,GACR,OAAQX,MAAMX,KAAKC,SAAS,mBAAoB,CAC5CW,OAAQ,QACRR,QAASJ,KAAKG,SACdc,KAAMC,KAAKC,UAAU,CACjBG,OAAQA,MAGXT,KAAKb,KAAKc,oB,sBAGnB,SAAUS,EAAQF,GACd,OAAe,IAAXE,EACQZ,MAAMX,KAAKC,SAAS,gBAAgBoB,EAAQ,CAChDT,OAAQ,MACRR,QAASJ,KAAKG,WAEbU,KAAKb,KAAKc,kBAGPH,MAAMX,KAAKC,SAAS,gBAAgBoB,EAAQ,CAChDT,OAAQ,SACRR,QAASJ,KAAKG,WAEbU,KAAKb,KAAKc,sB,KAQf,CAAQ,CAChBZ,QAAS,8CACTE,QAAS,CACLoB,cAAe,uCACf,eAAgB,sBCtBTC,MAtEf,YAAuE,IAAxDC,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,aAAcrC,EAAc,EAAdA,YAAc,EAClCsC,mBAAS,IADyB,mBAC3DC,EAD2D,KACjDC,EADiD,OAEpBF,mBAAS,IAFW,mBAE3DG,EAF2D,KAE1CC,EAF0C,OAG9BJ,mBAAS,IAHqB,mBAG3DK,EAH2D,KAG/CC,EAH+C,OAKxCN,mBAAS,IAL+B,mBAK3DO,EAL2D,KAKpDC,EALoD,KAuClE,OAhCAC,qBAAU,WACNxC,EAAIyC,kBACC1B,MAAK,SAAC2B,GACH,IAAMJ,EAAQI,EAAKC,KAAI,SAAAC,GACnB,MAAO,CACHC,IAAID,EAAKE,IAETnD,GAAIiD,EAAKE,IACT1D,IAAKwD,EAAKtB,KACVnC,IAAKyD,EAAK3B,KACVnB,MAAO8C,EAAK3B,KACZlB,MAAO6C,EAAK7C,MAAMgD,WAK1BR,EAASD,MAEZU,OAAO,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAChC,IAEHT,qBAAU,WACNxC,EAAIoD,iBACCrC,MAAK,SAACsC,GACHpB,EAAcoB,EAAKpC,MACnBkB,EAAoBkB,EAAKnC,OACzBmB,EAAcgB,EAAK7B,WAGtBwB,OAAO,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAEjC,IAEE,8BACI,uBAAM/D,UAAU,UAAhB,UACI,0BAASA,UAAU,UAAnB,UACI,sBAAKM,QAASsC,EAAc5C,UAAU,yBAAtC,UACI,qBAAKC,IAAI,gHAAsBD,UAAU,iBAAiBE,IAAKgD,IAC/D,qBAAKjD,IAAI,mDAAWD,UAAU,kBAAkBE,IAAKkE,OAEzD,sBAAKpE,UAAU,gBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,oBAAIA,UAAU,iBAAd,SAAiC8C,IACjC,wBAAQxC,QAASoC,EAAehC,aAAW,iFAAgBV,UAAU,uBAC7DW,KAAK,cAEjB,mBAAGX,UAAU,oBAAb,SAAkCgD,OAEtC,wBAAQ1C,QAASqC,EAAYjC,aAAW,mDAChCV,UAAU,0CAA0CW,KAAK,cAErE,kCACI,oBAAIX,UAAU,WAAd,SACKoD,EAAMK,KAAI,SAACjD,GACR,OAAO,cAAC,EAAD,CAAMA,KAAMA,EAAMD,YAAaA,GAAkBC,EAAKmD,kBCtD1EU,MAXf,WACI,OACI,8BACI,wBAAQrE,UAAU,SAAlB,SACI,mBAAGA,UAAU,eAAb,yCCuBDsE,MA3Bf,SAAuBjE,GACnB,IAAIkE,EAOJ,OANmB,IAAflE,EAAMmE,SACND,EAAU,kBAEO,IAAjBlE,EAAMoE,UACNF,EAAU,IAIV,qBAAKvE,UAAS,sBAAiBK,EAAM0B,KAAvB,YAA+BwC,GAA7C,SACI,sBAAKvE,UAAU,gBAAf,UACI,wBAAQM,QAASD,EAAMoE,QAAS/D,aAAW,6CAAUV,UAAU,+CAA+CW,KAAK,WACnH,qBAAIX,UAAU,cAAd,UAA6BK,EAAMO,MAAnC,OACA,uBAAMZ,UAAS,oBAAeK,EAAM0B,MAAQA,KAAK,aAAa2C,YAAU,EAAxE,UACI,qBAAK1E,UAAU,sBAAf,SACKK,EAAMsE,WAEX,wBAAQ3E,UAAS,oCAA+BK,EAAM0B,MAAOpB,KAAK,SAAlE,iECOLiE,MAxBf,YAAuC,IAC/BL,EADc/D,EAAgB,EAAhBA,KAAMiE,EAAU,EAAVA,QASxB,MAPa,KAATjE,IACA+D,EAAU,iBAEE,KAAZE,IACAF,EAAU,IAIV,qBAAKvE,UAAS,4BAAuBuE,GAArC,SACI,sBAAKvE,UAAU,iBAAf,UACI,wBAAQM,QAASmE,EAAS/D,aAAW,6CAAUV,UAAU,gDACjDW,KAAK,WACb,qBAAKV,IAAKO,EAAKP,IAAKD,UAAU,eAAeS,GAAG,cAC3CP,IAAKM,EAAKN,MACX,oBAAIF,UAAU,eAAd,SAA8BQ,EAAKI,cCwExCiE,MAlFf,WAAgB,IAAD,EACiDhC,oBAAS,GAD1D,mBACJiC,EADI,KACoBC,EADpB,OAE2ClC,oBAAS,GAFpD,mBAEJmC,EAFI,KAEiBC,EAFjB,OAG+CpC,oBAAS,GAHxD,mBAGJqC,EAHI,KAGmBC,EAHnB,OAI6BtC,mBAAS,IAJtC,mBAIJuC,EAJI,KAIUC,EAJV,KAsBLC,EAAiB,WACnBP,GAA0B,GAC1BE,GAAuB,GACvBE,GAAyB,GACzBE,EAAgB,KAGpB,OACI,qCACI,sBAAKrF,UAAU,OAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAM0C,cAtBa,WAC3BqC,GAA0B,IAqB2BpC,WAnB7B,WACxBsC,GAAuB,IAmBTrC,aAhBY,WAC1BuC,GAAyB,IAe0B5E,YA5B/B,SAACC,GAErB6E,EAAgB7E,MA6BR,cAAC,EAAD,IANJ,OAUA,cAAC,EAAD,CAAYA,KAAM4E,EAAcX,QAASa,IACzC,eAAC,EAAD,CAAeb,QAASa,EAAgBd,OAAQM,EAAwB/C,KAAK,UAC9DnB,MAAM,4HADrB,UAEI,uBAAOZ,UAAU,cAAcS,GAAG,OAAOsB,KAAK,OAAOpB,KAAK,OAAO4E,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAMC,YAAY,uBACpH,sBAAMjF,GAAG,aAAaT,UAAU,UAChC,uBAAOA,UAAU,cAAcS,GAAG,MAAMsB,KAAK,MAAMpB,KAAK,OAAO4E,UAAQ,EAACC,UAAU,IAAIC,UAAU,MAAMC,YAAY,+CAClH,sBAAMjF,GAAG,YAAYT,UAAU,aAGnC,eAAC,EAAD,CAAeyE,QAASa,EAAgBd,OAAQQ,EAAqBjD,KAAK,MAAMnB,MAAM,gEAAtF,UAEI,uBAAOZ,UAAU,+BAA+BS,GAAG,QAAQsB,KAAK,QAAQ2D,YAAY,mDAC7E/E,KAAK,OACL6E,UAAU,IAAIC,UAAU,KAAKF,UAAQ,IAC5C,sBAAM9E,GAAG,cAAcT,UAAU,UACjC,uBAAOA,UAAU,+BAA+BS,GAAG,QAAQsB,KAAK,QAAQ2D,YAAY,qGAC7EH,UAAQ,EAAC5E,KAAK,QACrB,sBAAMF,GAAG,cAAcT,UAAU,aAGrC,eAAC,EAAD,CAAeyE,QAASa,EAAgBd,OAAQU,EAAuBnD,KAAK,SAC7DnB,MAAM,wFADrB,UAEI,uBAAOZ,UAAU,+BAA+BS,GAAG,SAASsB,KAAK,QAC1D2D,YAAY,qGACZH,UAAQ,EAAC5E,KAAK,QACrB,sBAAMF,GAAG,eAAeT,UAAU,aAItC,cAAC,EAAD,CAAe+B,KAAK,SAASnB,MAAM,iECnEhC+E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhE,MAAK,YAAkD,IAA/CiE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.3acf11a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header_logo.6129e9de.svg\";","import headerLogo from \"../images/header_logo.svg\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <header className=\"header\">\r\n            <img alt=\"Лого\" className=\"header__logo\" src={headerLogo}/>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/profile_pencil_big.ae1a976d.svg\";","function Card(props) {\r\n    const handleClick = () => {\r\n        props.onCardClick(props.card);\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <li className=\"element\" >\r\n            <img onClick= {handleClick} alt={props.alt} className=\"element__image\" id=\"image_card\"\r\n                 src={props.card.src}/>\r\n            <button aria-label=\"корзина\" className=\"button button_type button_type_basket\"\r\n                    type=\"button\"></button>\r\n            <div className=\"element__text-wrapper\">\r\n                <h3 className=\"element__text\">{props.card.title}</h3>\r\n                <div className=\"element__likes-wrapper\">\r\n                    <button aria-label=\"сердечко\" className=\"element__like\" type=\"button\"></button>\r\n                    <p className=\"element__likes\">{props.card.likes}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Card;","class Api {\r\n\r\n    constructor(options) {\r\n       this._baseUrl = options.baseUrl;\r\n       this._headers = options.headers;\r\n    }\r\n    _getResponseData(res) {\r\n        if (res.ok) {\r\n            return res.json(); // возвращаем результат работы метода и идём в следующий then\r\n        }\r\n\r\n        // если ошибка, отклоняем промис\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n\r\n    getInitialCards() {//закбираем карточки с сервера\r\n       return  fetch(this._baseUrl+'/cards',{\r\n            method: 'GET',\r\n            headers: this._headers\r\n        })\r\n           .then(this._getResponseData);\r\n\r\n    }\r\n\r\n    getInitialInfo () {// забираем данные пользователя с сервера\r\n        return fetch(this._baseUrl+'/users/me',{\r\n            method: 'GET',\r\n            headers: this._headers\r\n        })\r\n            .then(this._getResponseData);\r\n    }\r\n\r\n    editInfo (name, about){ // меняем данные пользователя\r\n       return  fetch(this._baseUrl+'/users/me', {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about\r\n            })\r\n        })\r\n           .then(this._getResponseData);\r\n    }\r\n    addCard (name, link) { // добавляем новую карточку\r\n        return  fetch(this._baseUrl+'/cards', {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                link: link\r\n            })\r\n        })\r\n            .then(this._getResponseData);\r\n    }\r\n    deleteCard (cardId){ // удаляем карточку\r\n        return  fetch(this._baseUrl+'/cards/'+cardId, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n            .then(this._getResponseData);\r\n    }\r\n\r\n    editAvatar (avatar) { // меняем аватар\r\n        return  fetch(this._baseUrl+'/users/me/avatar', {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: avatar\r\n            })\r\n        })\r\n            .then(this._getResponseData);\r\n\r\n    }\r\n    likeCard (isLike, cardId) { // лайкам и дизлайкам карточку\r\n        if (isLike === false) {\r\n            return  fetch(this._baseUrl+'/cards/likes/'+cardId, {\r\n                method: 'PUT',\r\n                headers: this._headers\r\n            })\r\n                .then(this._getResponseData);\r\n\r\n        } else {\r\n            return  fetch(this._baseUrl+'/cards/likes/'+cardId, {\r\n                method: 'DELETE',\r\n                headers: this._headers\r\n            })\r\n                .then(this._getResponseData);\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nconst api = new Api({ // подключение к api\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20',\r\n    headers: {\r\n        authorization: '6fb84545-6862-41b6-acf7-dd6745b9ebe0',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n\r\n\r\nexport {api};","import pencil from \"../images/profile_pencil_big.svg\";\r\nimport Card from './Card';\r\nimport {api} from \"../utils/api.js\";\r\nimport {useState, useEffect} from \"react\";\r\n\r\n\r\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick}) {\r\n    const [userName, setUserName] = useState('');\r\n    const [userDescription, setUserDescription] = useState('');\r\n    const [userAvatar, setUserAvatar] = useState('');\r\n\r\n    const [cards, setCards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        api.getInitialCards()\r\n            .then((data) => {\r\n                const cards = data.map(item => {\r\n                    return {\r\n                        key:item._id,\r\n\r\n                        id: item._id,\r\n                        src: item.link,\r\n                        alt: item.name,\r\n                        title: item.name,\r\n                        likes: item.likes.length\r\n\r\n\r\n                    }\r\n                })\r\n                setCards(cards);\r\n            })\r\n            .catch( err => console.log(err))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        api.getInitialInfo ()\r\n            .then((info) => {\r\n                setUserName  (info.name);\r\n                setUserDescription (info.about);\r\n                setUserAvatar(info.avatar);\r\n\r\n            })\r\n            .catch( err => console.log(err))\r\n\r\n    },[])\r\n    return (\r\n        <div>\r\n            <main className=\"content\">\r\n                <section className=\"profile\">\r\n                    <div onClick={onEditAvatar} className=\"profile__image-wrapper\">\r\n                        <img alt=\"аватар пользователя\" className=\"profile__image\" src={userAvatar}/>\r\n                        <img alt=\"карандаш\" className=\"profile__pencil\" src={pencil}/>\r\n                    </div>\r\n                    <div className=\"profile__info\">\r\n                        <div className=\"profile__title-wrapper\">\r\n                            <h1 className=\"profile__title\" >{userName}</h1>\r\n                            <button onClick={onEditProfile} aria-label=\"редактировать\" className=\"profile__edit-button\"\r\n                                    type=\"button\"></button>\r\n                        </div>\r\n                        <p className=\"profile__subtitle\">{userDescription}</p>\r\n                    </div>\r\n                    <button onClick={onAddPlace} aria-label=\"добавить\"\r\n                            className=\"button button_type button_type_add-card\" type=\"button\"></button>\r\n                </section>\r\n                <section>\r\n                    <ul className=\"elements\">\r\n                        {cards.map((card)=> {\r\n                            return <Card card={card} onCardClick={onCardClick} key={card.key}/>\r\n                        })}\r\n                    </ul>\r\n                </section>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n\r\n\r\n\r\n","\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <footer className=\"footer\">\r\n                <p className=\"footer__text\">© 2020 Mesto Russia</p>\r\n            </footer>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;","\r\n\r\nfunction PopupWithForm(props) {\r\n    let visible;\r\n    if (props.isOpen===true){\r\n        visible = 'popup_visible'\r\n    }\r\n    if (props.onClose=== false){\r\n        visible = ''\r\n    }\r\n    return (\r\n\r\n        <div className={`popup popup_${props.name} ${visible}`} >\r\n            <div className=\"popup__window\">\r\n                <button onClick={props.onClose} aria-label=\"закрыть\" className=\"popup__close-button popup__close-button_card\" type=\"button\"></button>\r\n                <h3 className=\"popup__text\">{props.title} </h3>\r\n                <form className={`form form_${props.name}`} name=\"form__card\" noValidate>\r\n                    <div className=\"form__input-wrapper\">\r\n                        {props.children}\r\n                    </div>\r\n                    <button className={`form__button form__button_${props.name}`}type=\"submit\">\r\n                        Создать\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","\r\n\r\n\r\nfunction ImagePopup ({card, onClose}) {\r\n    let visible;\r\n    if (card !== ''){\r\n        visible = 'popup_visible'\r\n    }\r\n    if (onClose === ''){\r\n        visible = ''\r\n    }\r\n\r\n    return (\r\n        <div className={`popup popup_image ${visible}`}>\r\n            <div className=\"popup__wrapper\">\r\n                <button onClick={onClose} aria-label=\"закрыть\" className=\"popup__close-button popup__close-button_image\"\r\n                        type=\"button\"></button>\r\n                <img alt={card.alt} className=\"popup__image\" id=\"image_popup\"\r\n                     src={card.src}/>\r\n                    <h3 className=\"popup__title\">{card.title}</h3>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ImagePopup;","import '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport {useState} from \"react\";\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState('');\n\n    const handleCardClick = (card) => {\n\n        setSelectedCard(card);\n    }\n\n    const handleEditProfileClick = () => {\n        setIsEditProfilePopupOpen(true);\n    }\n    const handleAddPlaceClick = () => {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    const handleEditAvatarClick = () => {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    const closeAllPopups = () => {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard('');\n    }\n\n    return (\n        <>\n            <div className=\"page\">\n                <Header/>\n                <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n                      onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}/>\n\n\n                <Footer/>\n                }\n\n            </div>\n            <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n            <PopupWithForm onClose={closeAllPopups} isOpen={isEditProfilePopupOpen} name=\"profile\"\n                           title=\"Редактировать профиль\">\n                <input className=\"form__input\" id=\"name\" name=\"name\" type=\"text\" required minLength=\"2\" maxLength=\"40\"  placeholder=\"Имя\"/>\n                <span id=\"name-error\" className=\"error\"></span>\n                <input className=\"form__input\" id=\"job\" name=\"job\" type=\"text\" required minLength=\"2\" maxLength=\"200\" placeholder=\"Занятие\"/>\n                <span id=\"job-error\" className=\"error\"></span>\n\n            </PopupWithForm>\n            <PopupWithForm onClose={closeAllPopups} isOpen={isAddPlacePopupOpen} name=\"cad\" title=\"Новое место\">\n\n                <input className=\"form__input form__input_card\" id=\"title\" name=\"title\" placeholder=\"Название\"\n                       type=\"text\"\n                       minLength=\"2\" maxLength=\"30\" required/>\n                <span id=\"title-error\" className=\"error\"></span>\n                <input className=\"form__input form__input_card\" id=\"image\" name=\"image\" placeholder=\"Ссылка на картинку\"\n                       required type=\"url\"/>\n                <span id=\"image-error\" className=\"error\"></span>\n\n            </PopupWithForm>\n            <PopupWithForm onClose={closeAllPopups} isOpen={isEditAvatarPopupOpen} name=\"avatar\"\n                           title=\"Обновить аватар\">\n                <input className=\"form__input form__input_card\" id=\"avatar\" name=\"image\"\n                       placeholder=\"Ссылка на картинку\"\n                       required type=\"url\"/>\n                <span id=\"avatar-error\" className=\"error\"></span>\n\n            </PopupWithForm>\n\n            <PopupWithForm name=\"delete\" title=\"Вы уверены?\">\n\n            </PopupWithForm>\n\n\n        </>\n\n    );\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}